from django.db import models
from django.utils import timezone
from datetime import datetime
from django.contrib.auth.models import User
from PIL import Image



# Create your models here.




class Profile(models.Model):
    user = models.OneToOneField(User,on_delete=models.CASCADE)
    image = models.ImageField(default='default.jpg',upload_to='profile_pics')

    def __(self):
        return f'{self.user.username} Profile'

    def save (self):
        super().save()
# to resize the image
        img = Image.open(self.image.path)
        if img.height > 400 or img.width > 400:
            output_size = (400, 400)
            img.thumbnail(output_size)
            img.save(self.image.path)





class Individu(models.Model):
    user = models.OneToOneField(User, on_delete = models.CASCADE)
    cin = models.CharField(max_length = 8, unique = True, default = "")
    nom = models.CharField(max_length = 50, default="")
    prenoms = models.CharField(max_length = 50, default="")
    photo = models.ImageField(default = "default.jpg", upload_to = 'individu_pics')
    tel = models.CharField(max_length = 15, default="")
    addr = models.CharField(max_length = 60, default="")
    ville_residence = models.CharField(max_length = 250, default="")
    pays = models.CharField(max_length = 100, default = "Maroc")
    genre = models.CharField(max_length = 15, default = "Masculin")
    etat_civil = models.CharField(max_length = 15, default = "Célibataire")
    date_nais = models.DateField()
    status_choices = (
        ('professeur', 'professeur'),
        ('candidat', 'candidat'),
        ('doctorant', 'doctorant'),
    )
    my_status = models.CharField(max_length = 15, choices = status_choices,default="")
    desactiver = models.BooleanField(default = False)

    def __str__(self):
        return "%s %s" %(self.nom, self.prenoms)



class Diplome(models.Model):
    #diplome_choice = (
    #    ('mst001', 'mst001'),
    #    ('mst002', 'mst002'),
    #    ('ing001', 'ing001'),
    #    )
    type_dip = models.CharField(max_length=100, default="")
    date_dip = models.DateField()
    def __str__(self):
        return self.type_dip


class Candidat(models.Model):
    fonction = models.CharField(max_length = 60, default="")
    entreprise = models.CharField(max_length = 60, default="")
    individu = models.OneToOneField(Individu, on_delete = models.CASCADE, default="")
    diplome = models.ManyToManyField(Diplome, default="")
    preselection = models.BooleanField(default = False)
    selection = models.BooleanField(default = False)
    def __str__(self):
        return "%s %s" %(self.individu.nom, self.individu.prenoms)




class These(models.Model):
    titre_these = models.CharField(max_length=100, default="")
    director_these = models.CharField(max_length = 100, default="Madame Anoun")
    def __str__(self):
        return self.titre_these



class Compte(models.Model):
    ref_compte = models.AutoField(primary_key = True)
    date_cree = models.DateTimeField()


class Jury(models.Model):
    libelle_jury =  models.CharField(max_length=100, default="")
    date_soutenance = models.DateTimeField(default = datetime.now, null = True)
    def __str__(self):
        return str(self.libelle_jury)


class Equipe_recherche(models.Model):
    libelle_equipe = models.CharField(max_length=100, default="")
    def __str__(self):
        return str(self.libelle_equipe)



class Professeur(models.Model):
    status = models.BooleanField(default = False)
    individu = models.OneToOneField(Individu, on_delete = models.CASCADE, default="")
    equipe = models.ForeignKey(Equipe_recherche, on_delete = models.CASCADE, default="")
    jury = models.ForeignKey(Jury, on_delete = models.CASCADE,  default = "")
    def __str__(self):
        return str(self.individu.nom)


class Doctorant(models.Model):
    these= models.OneToOneField(These, on_delete=models.CASCADE, default="")
    candidat = models.OneToOneField(Candidat, on_delete = models.CASCADE, default="")
    equipe = models.ForeignKey(Equipe_recherche, on_delete = models.CASCADE, default="")
    jury = models.ForeignKey(Jury, on_delete = models.CASCADE,  default = "", null = True)
    mention_choice = (
        ('Honorable','Honorable'),
        ('Très Honorable','Très Honorable'),
    )
    mention = models.CharField(max_length = 20, choices = mention_choice, default = "Honorable")
    def __str__(self):
        return "%s %s" %(self.candidat.individu.nom, self.candidat.individu.prenoms)

class Msg(models.Model):

    to_who = models.CharField(max_length=100, default="")
    msg = models.TextField(default="")
    #attachment = models.CharField(max_length=100, default="")
    sender = models.ForeignKey(Individu, on_delete=models.CASCADE, default="")
    date = models.DateTimeField(default=datetime.now)
    def __str__(self):
        return self.sujet_msg



class Key(models.Model):
    value = models.CharField(max_length = 10, default = "")


class Labo(models.Model):
    libelle_labo = models.CharField(max_length=100, default="")
    id_equipe = models.ForeignKey(Equipe_recherche, on_delete=models.CASCADE, default="")


class Enregistrement(models.Model):
    titre = models.CharField(max_length = 100, default = "")
    rapport = models.FileField(max_length=100, default="")
    date_enregristrement = models.DateTimeField(default=datetime.now)
    auteur = models.ForeignKey(Doctorant, on_delete = models.CASCADE, default="")
    def __str__(self):
        return "%s %s" %(self.auteur.candidat.individu.nom, self.titre)


class Article(models.Model):
    titre = models.CharField(max_length = 100, default = "")
    body = models.TextField()
    date = models.DateField(default = timezone.now)
    auteur = models.ForeignKey(Doctorant, on_delete = models.CASCADE, default="")
    accept = models.BooleanField(default = True)
    def __str__(self):
        return str(self.titre)
